
#!/usr/bin/env python3
"""
M√≥dulo de Agendamento - Sistema de E-mails
Respons√°vel pelo processamento de agendamentos e envio de e-mails
Vers√£o 2.0 - Melhorado com EmailMessage e logs detalhados
"""

import smtplib
import ssl
from email.message import EmailMessage
from datetime import datetime, timedelta
from email_validator import validate_email, EmailNotValidError
import time

# ‚ö†Ô∏è CONFIGURA√á√ïES DE E-MAIL - ALTERE AQUI SUAS CREDENCIAIS
SMTP_SERVER = "smtp.gmail.com"
SMTP_PORT = 465
EMAIL_USUARIO = "seuemail@gmail.com"  # ‚Üê Altere aqui
EMAIL_SENHA = "SENHA_DO_APP"          # ‚Üê Altere aqui (senha de aplicativo)

# Lista de usu√°rios para agendamento - Vers√£o 2.0 com mais dados
USUARIOS = [
    {
        "nome": "Jo√£o Silva",
        "email": "joao.silva@exemplo.com",
        "servico": "Instala√ß√£o de Software",
        "data": "2024-06-15",
        "horario": "14:00",
        "prioridade": "Alta"
    },
    {
        "nome": "Maria Santos",
        "email": "maria.santos@exemplo.com", 
        "servico": "Manuten√ß√£o de Hardware",
        "data": "2024-06-16",
        "horario": "10:30",
        "prioridade": "M√©dia"
    },
    {
        "nome": "Pedro Costa",
        "email": "pedro.costa@exemplo.com",
        "servico": "Configura√ß√£o de Rede",
        "data": "2024-06-17",
        "horario": "16:00",
        "prioridade": "Baixa"
    },
    {
        "nome": "Ana Oliveira",
        "email": "ana.oliveira@exemplo.com",
        "servico": "Backup de Dados",
        "data": "2024-06-18",
        "horario": "09:00",
        "prioridade": "Alta"
    }
]

def validar_email(email):
    """Valida se o e-mail possui formato correto"""
    try:
        validate_email(email)
        return True
    except EmailNotValidError:
        return False

def enviar_email(destinatario, assunto, corpo):
    """
    Envia e-mail via SMTP usando EmailMessage
    
    Args:
        destinatario (str): E-mail do destinat√°rio
        assunto (str): Assunto do e-mail
        corpo (str): Corpo da mensagem em HTML
    """
    try:
        print(f"üìß Preparando envio de e-mail para: {destinatario}")
        
        # Validar e-mail do destinat√°rio
        if not validar_email(destinatario):
            print(f"‚ùå E-mail inv√°lido: {destinatario}")
            return False
        
        # Criar mensagem usando EmailMessage
        mensagem = EmailMessage()
        mensagem["Subject"] = assunto
        mensagem["From"] = EMAIL_USUARIO
        mensagem["To"] = destinatario
        
        # Definir conte√∫do HTML
        mensagem.set_content(corpo, subtype='html')
        
        print(f"üîê Conectando ao servidor SMTP {SMTP_SERVER}:{SMTP_PORT}")
        
        # Configurar SSL e enviar
        context = ssl.create_default_context()
        
        with smtplib.SMTP_SSL(SMTP_SERVER, SMTP_PORT, context=context) as server:
            print("üîë Fazendo login no servidor SMTP...")
            server.login(EMAIL_USUARIO, EMAIL_SENHA)
            
            print("üì§ Enviando e-mail...")
            server.send_message(mensagem)
        
        print(f"‚úÖ E-mail enviado com sucesso para: {destinatario}")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao enviar e-mail para {destinatario}: {str(e)}")
        return False

def gerar_template_solicitacao(usuario):
    """Gera template HTML aprimorado para e-mail de solicita√ß√£o"""
    timestamp = datetime.now().strftime("%d/%m/%Y √†s %H:%M")
    
    return f"""
    <html>
        <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto;">
            <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center; border-radius: 10px 10px 0 0;">
                <h1 style="color: white; margin: 0; font-size: 24px;">üéØ HelpDesk Pro</h1>
                <p style="color: white; margin: 5px 0 0 0; opacity: 0.9;">Sistema de Agendamento T√©cnico</p>
            </div>
            
            <div style="padding: 30px; background: #f8f9fa; border-radius: 0 0 10px 10px;">
                <h2 style="color: #2c5aa0; margin-top: 0;">Agendamento Solicitado com Sucesso!</h2>
                
                <p>Ol√° <strong>{usuario['nome']}</strong>,</p>
                
                <p>Recebemos sua solicita√ß√£o de agendamento e ela est√° sendo processada por nossa equipe t√©cnica.</p>
                
                <div style="background: white; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #2c5aa0;">
                    <h3 style="margin-top: 0; color: #495057;">üìã Detalhes do Agendamento:</h3>
                    <table style="width: 100%; border-collapse: collapse;">
                        <tr><td style="padding: 8px 0; font-weight: bold;">üõ†Ô∏è Servi√ßo:</td><td style="padding: 8px 0;">{usuario['servico']}</td></tr>
                        <tr><td style="padding: 8px 0; font-weight: bold;">üìÖ Data:</td><td style="padding: 8px 0;">{usuario['data']}</td></tr>
                        <tr><td style="padding: 8px 0; font-weight: bold;">‚è∞ Hor√°rio:</td><td style="padding: 8px 0;">{usuario['horario']}</td></tr>
                        <tr><td style="padding: 8px 0; font-weight: bold;">‚ö° Prioridade:</td><td style="padding: 8px 0;"><span style="background: #fff3cd; padding: 2px 8px; border-radius: 4px;">{usuario['prioridade']}</span></td></tr>
                        <tr><td style="padding: 8px 0; font-weight: bold;">üìä Status:</td><td style="padding: 8px 0;"><span style="color: #856404;">Aguardando Atendimento</span></td></tr>
                    </table>
                </div>
                
                <div style="background: #d1ecf1; padding: 15px; border-radius: 5px; border-left: 4px solid #bee5eb;">
                    <p style="margin: 0;"><strong>üí° Pr√≥ximos Passos:</strong></p>
                    <p style="margin: 5px 0 0 0;">Em breve voc√™ receber√° uma confirma√ß√£o quando o atendimento for realizado por nossa equipe.</p>
                </div>
                
                <hr style="margin: 30px 0; border: none; border-top: 1px solid #dee2e6;">
                
                <div style="text-align: center; color: #6c757d; font-size: 12px;">
                    <p>Sistema de Suporte T√©cnico - HelpDesk Pro</p>
                    <p>Solicita√ß√£o processada em {timestamp}</p>
                    <p>Este √© um e-mail autom√°tico, n√£o responda.</p>
                </div>
            </div>
        </body>
    </html>
    """

def gerar_template_atendimento(usuario):
    """Gera template HTML aprimorado para e-mail de atendimento"""
    timestamp = datetime.now().strftime("%d/%m/%Y √†s %H:%M")
    
    return f"""
    <html>
        <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto;">
            <div style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%); padding: 20px; text-align: center; border-radius: 10px 10px 0 0;">
                <h1 style="color: white; margin: 0; font-size: 24px;">‚úÖ HelpDesk Pro</h1>
                <p style="color: white; margin: 5px 0 0 0; opacity: 0.9;">Atendimento Conclu√≠do</p>
            </div>
            
            <div style="padding: 30px; background: #f8f9fa; border-radius: 0 0 10px 10px;">
                <h2 style="color: #28a745; margin-top: 0;">Agendamento Atendido com Sucesso!</h2>
                
                <p>Ol√° <strong>{usuario['nome']}</strong>,</p>
                
                <p>Temos o prazer de informar que seu agendamento foi <strong>atendido com sucesso</strong> por nossa equipe t√©cnica!</p>
                
                <div style="background: white; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #28a745;">
                    <h3 style="margin-top: 0; color: #155724;">üìã Servi√ßo Conclu√≠do:</h3>
                    <table style="width: 100%; border-collapse: collapse;">
                        <tr><td style="padding: 8px 0; font-weight: bold;">üõ†Ô∏è Servi√ßo:</td><td style="padding: 8px 0;">{usuario['servico']}</td></tr>
                        <tr><td style="padding: 8px 0; font-weight: bold;">üìÖ Data:</td><td style="padding: 8px 0;">{usuario['data']}</td></tr>
                        <tr><td style="padding: 8px 0; font-weight: bold;">‚è∞ Hor√°rio:</td><td style="padding: 8px 0;">{usuario['horario']}</td></tr>
                        <tr><td style="padding: 8px 0; font-weight: bold;">‚ö° Prioridade:</td><td style="padding: 8px 0;"><span style="background: #d4edda; padding: 2px 8px; border-radius: 4px;">{usuario['prioridade']}</span></td></tr>
                        <tr><td style="padding: 8px 0; font-weight: bold;">‚úÖ Status:</td><td style="padding: 8px 0;"><span style="color: #28a745; font-weight: bold;">CONCLU√çDO</span></td></tr>
                    </table>
                </div>
                
                <div style="background: #fff3cd; padding: 15px; border-radius: 5px; border-left: 4px solid #ffc107; text-align: center;">
                    <h4 style="margin-top: 0; color: #856404;">‚≠ê Avalie Nosso Atendimento</h4>
                    <p style="margin: 10px 0;">Sua opini√£o √© muito importante para n√≥s!</p>
                    <div style="margin: 15px 0;">
                        <span style="font-size: 24px; margin: 0 5px; cursor: pointer;">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</span>
                    </div>
                </div>
                
                <div style="background: #d1ecf1; padding: 15px; border-radius: 5px; margin: 20px 0;">
                    <p style="margin: 0;"><strong>üìû Precisando de mais alguma coisa?</strong></p>
                    <p style="margin: 5px 0 0 0;">Nossa equipe est√° sempre dispon√≠vel para ajudar. Entre em contato quando precisar!</p>
                </div>
                
                <hr style="margin: 30px 0; border: none; border-top: 1px solid #dee2e6;">
                
                <div style="text-align: center; color: #6c757d; font-size: 12px;">
                    <p>Sistema de Suporte T√©cnico - HelpDesk Pro</p>
                    <p>Atendimento conclu√≠do em {timestamp}</p>
                    <p>Este √© um e-mail autom√°tico, n√£o responda.</p>
                </div>
            </div>
        </body>
    </html>
    """

def testar_conexao_smtp():
    """Testa conectividade SMTP antes do envio"""
    try:
        print("üîç Iniciando teste de conex√£o SMTP...")
        print(f"üì° Servidor: {SMTP_SERVER}:{SMTP_PORT}")
        print(f"üë§ Usu√°rio: {EMAIL_USUARIO}")
        
        context = ssl.create_default_context()
        
        with smtplib.SMTP_SSL(SMTP_SERVER, SMTP_PORT, context=context) as server:
            print("üîê Estabelecendo conex√£o SSL...")
            server.login(EMAIL_USUARIO, EMAIL_SENHA)
            print("üîë Login realizado com sucesso!")
            
        print("‚úÖ Conex√£o SMTP estabelecida com sucesso!")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro na conex√£o SMTP: {str(e)}")
        print("‚ö†Ô∏è  Verifique suas credenciais de e-mail!")
        return False

def processar_agendamento():
    """
    Processa todos os agendamentos e envia e-mails de confirma√ß√£o
    Vers√£o 2.0 - Com logs detalhados e estat√≠sticas
    """
    print("üöÄ Iniciando Sistema de Agendamento - Vers√£o 2.0")
    print("=" * 60)
    
    # Estat√≠sticas iniciais
    total_usuarios = len(USUARIOS)
    emails_enviados = 0
    emails_falharam = 0
    
    print(f"üìä Estat√≠sticas:")
    print(f"   Total de usu√°rios: {total_usuarios}")
    print(f"   E-mails a enviar: {total_usuarios * 2}")
    print("-" * 60)
    
    # Testar conex√£o SMTP primeiro
    if not testar_conexao_smtp():
        print("‚ùå Abortando execu√ß√£o devido a falha na conex√£o SMTP")
        return False
    
    print(f"\nüìã Processando agendamentos...")
    print("-" * 60)
    
    for i, usuario in enumerate(USUARIOS, 1):
        print(f"\nüîÑ [{i}/{total_usuarios}] Processando: {usuario['nome']}")
        print(f"   üìß E-mail: {usuario['email']}")
        print(f"   üõ†Ô∏è  Servi√ßo: {usuario['servico']}")
        print(f"   üìÖ Data/Hora: {usuario['data']} √†s {usuario['horario']}")
        print(f"   ‚ö° Prioridade: {usuario['prioridade']}")
        
        # 1. Enviar e-mail de solicita√ß√£o
        print(f"\n   üì§ [1/2] Enviando confirma√ß√£o de solicita√ß√£o...")
        assunto_solicitacao = f"üéØ Agendamento Solicitado - {usuario['servico']}"
        corpo_solicitacao = gerar_template_solicitacao(usuario)
        
        if enviar_email(usuario['email'], assunto_solicitacao, corpo_solicitacao):
            emails_enviados += 1
            print(f"   ‚úÖ Confirma√ß√£o de solicita√ß√£o enviada!")
        else:
            emails_falharam += 1
            print(f"   ‚ùå Falha no envio da confirma√ß√£o de solicita√ß√£o!")
        
        # Simular tempo de processamento
        print(f"   ‚è≥ Processando agendamento...")
        time.sleep(3)  # Simula tempo de atendimento
        
        # 2. Enviar e-mail de atendimento
        print(f"   üì§ [2/2] Enviando confirma√ß√£o de atendimento...")
        assunto_atendimento = f"‚úÖ Agendamento Atendido - {usuario['servico']}"
        corpo_atendimento = gerar_template_atendimento(usuario)
        
        if enviar_email(usuario['email'], assunto_atendimento, corpo_atendimento):
            emails_enviados += 1
            print(f"   ‚úÖ Confirma√ß√£o de atendimento enviada!")
        else:
            emails_falharam += 1
            print(f"   ‚ùå Falha no envio da confirma√ß√£o de atendimento!")
        
        print(f"   üéâ Usu√°rio {usuario['nome']} processado com sucesso!")
        
        if i < total_usuarios:
            print(f"   ‚è∏Ô∏è  Aguardando pr√≥ximo usu√°rio...")
            time.sleep(2)
    
    # Estat√≠sticas finais
    print("\n" + "=" * 60)
    print("üìä RELAT√ìRIO FINAL:")
    print(f"   üë• Usu√°rios processados: {total_usuarios}")
    print(f"   ‚úÖ E-mails enviados: {emails_enviados}")
    print(f"   ‚ùå E-mails falharam: {emails_falharam}")
    print(f"   üìà Taxa de sucesso: {(emails_enviados/(total_usuarios*2)*100):.1f}%")
    
    if emails_falharam == 0:
        print("\nüéâ TODOS OS AGENDAMENTOS FORAM PROCESSADOS COM SUCESSO!")
    else:
        print(f"\n‚ö†Ô∏è  {emails_falharam} e-mails falharam. Verifique os logs acima.")
    
    print("=" * 60)
    return emails_falharam == 0

if __name__ == "__main__":
    processar_agendamento()
